[0m[[0m[0mdebug[0m] [0m[0m> Exec(compile, Some(e91aa773-f6d9-490f-8c25-2109740d5471), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / compile[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /Users/nancymiller/jam/software/scalation/scalation_2.0/target/scala-3.1.3/classes ...[0m
[0m[[0m[31merror[0m] [0m[0m[31m[31m-- [E007] Type Mismatch Error: /Users/nancymiller/jam/software/scalation/scalation_2.0/src/main/scala/scalation/database/BpTreeMap.scala:194:85 [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m194 |[0m            [33mif[0m ! until.isDefined || ord.lt (k, until.get) [33mthen[0m subtree.insert (k, v, root)[0m
[0m[[0m[31merror[0m] [0m[0m[31m[31m    |[0m                                                                                     ^^^^[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m                 Found:    (BpTreeMap.this.root : BpTreeMap.this.Node)[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m                 Required: subtree.Node[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |---------------------------------------------------------------------------[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m Explanation (enabled by `-explain`)[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m Tree: [33mthis[0m.root[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m I tried to show that[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m   (BpTreeMap.this.root : BpTreeMap.this.Node)[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m conforms to[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m   subtree.Node[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m but the comparison trace ended with `false`:[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m   ==> (BpTreeMap.this.root : BpTreeMap.this.Node)  <:  subtree.Node[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m     ==> BpTreeMap.this.Node  <:  subtree.Node (left is approximated)[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m       ==> (BpTreeMap.this : scalation.database.BpTreeMap[K, V])  <:  (subtree : scalation.database.BpTreeMap[K, V])[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m         ==> scalation.database.BpTreeMap[K, V]  <:  (subtree : scalation.database.BpTreeMap[K, V]) (left is approximated)[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m         <== scalation.database.BpTreeMap[K, V]  <:  (subtree : scalation.database.BpTreeMap[K, V]) (left is approximated) = false[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m       <== (BpTreeMap.this : scalation.database.BpTreeMap[K, V])  <:  (subtree : scalation.database.BpTreeMap[K, V]) = false[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m     <== BpTreeMap.this.Node  <:  subtree.Node (left is approximated) = false[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m   <== (BpTreeMap.this.root : BpTreeMap.this.Node)  <:  subtree.Node = false[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m The tests were made under the empty constraint[0m
[0m[[0m[31merror[0m] [0m[0m[31m     ---------------------------------------------------------------------------[0m[0m
[0m[[0m[31merror[0m] [0m[0m[34mExplanation[0m[0m
[0m[[0m[31merror[0m] [0m[0m[34m===========[0m[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mTree: [33mthis[0m.root[0m
[0m[[0m[31merror[0m] [0m[0mI tried to show that[0m
[0m[[0m[31merror[0m] [0m[0m  (BpTreeMap.this.root : BpTreeMap.this.Node)[0m
[0m[[0m[31merror[0m] [0m[0mconforms to[0m
[0m[[0m[31merror[0m] [0m[0m  subtree.Node[0m
[0m[[0m[31merror[0m] [0m[0mbut the comparison trace ended with `false`:[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m  ==> (BpTreeMap.this.root : BpTreeMap.this.Node)  <:  subtree.Node[0m
[0m[[0m[31merror[0m] [0m[0m    ==> BpTreeMap.this.Node  <:  subtree.Node (left is approximated)[0m
[0m[[0m[31merror[0m] [0m[0m      ==> (BpTreeMap.this : scalation.database.BpTreeMap[K, V])  <:  (subtree : scalation.database.BpTreeMap[K, V])[0m
[0m[[0m[31merror[0m] [0m[0m        ==> scalation.database.BpTreeMap[K, V]  <:  (subtree : scalation.database.BpTreeMap[K, V]) (left is approximated)[0m
[0m[[0m[31merror[0m] [0m[0m        <== scalation.database.BpTreeMap[K, V]  <:  (subtree : scalation.database.BpTreeMap[K, V]) (left is approximated) = false[0m
[0m[[0m[31merror[0m] [0m[0m      <== (BpTreeMap.this : scalation.database.BpTreeMap[K, V])  <:  (subtree : scalation.database.BpTreeMap[K, V]) = false[0m
[0m[[0m[31merror[0m] [0m[0m    <== BpTreeMap.this.Node  <:  subtree.Node (left is approximated) = false[0m
[0m[[0m[31merror[0m] [0m[0m  <== (BpTreeMap.this.root : BpTreeMap.this.Node)  <:  subtree.Node = false[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mThe tests were made under the empty constraint[0m
[0m[[0m[31merror[0m] [0m[0mone error found[0m
[0m[[0m[31merror[0m] [0m[0m(Compile / [31mcompileIncremental[0m) Compilation failed[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 3 s, completed Aug 5, 2022, 3:53:58 PM[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
