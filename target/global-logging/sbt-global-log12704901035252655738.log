[debug] > Exec(runMain scalation.database.table.gTableTest2, None, None)
[debug] Evaluating tasks: Compile / runMain
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 359 Scala sources to D:\dbms\PROJECT_1\scalation_2.0\target\scala-3.2.0\classes ...
[warn] Canceling execution...
[error] -- [E006] Not Found Error: D:\dbms\PROJECT_1\scalation_2.0\src\main\scala\scalation\database\table\GTable.scala:456:44 
[error] 456 |                if e != null then pathTable[counter] ++ ((e, elab))
[error]     |                                            ^^^^^^^
[error]     |                                            Not found: type counter
[error]     |---------------------------------------------------------------------------
[error]     | Explanation (enabled by `-explain`)
[error]     |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[error]     | The identifier for `type counter` is not bound, that is,
[error]     | no declaration for this identifier can be found.
[error]     | That can happen, for example, if `counter` or its declaration has either been
[error]     | misspelt or if an import is missing.
[error]      ---------------------------------------------------------------------------
[error] Explanation
[error] ===========
[error] The identifier for `type counter` is not bound, that is,
[error] no declaration for this identifier can be found.
[error] That can happen, for example, if `counter` or its declaration has either been
[error] misspelt or if an import is missing.
[error] -- [E008] Not Found Error: D:\dbms\PROJECT_1\scalation_2.0\src\main\scala\scalation\database\table\GTable.scala:837:14 
[error] 837 |    taught_by.show ()
[error]     |    ^^^^^^^^^^^^^^
[error]     |value show is not a member of collection.mutable.ArrayBuffer[
[error]     |  collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |] - did you mean taught_by.drop?
[error] -- [E007] Type Mismatch Error: D:\dbms\PROJECT_1\scalation_2.0\src\main\scala\scalation\database\table\KGTable.scala:326:35 
[error] 326 |    val taken_id = student expand ("name, cid", ("cid", course))
[error]     |                                   ^^^^^^^^^^^
[error]     |Found:    ("name, cid" : String)
[error]     |Required: collection.mutable.ArrayBuffer[
[error]     |  collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |]
[error]     |---------------------------------------------------------------------------
[error]     | Explanation (enabled by `-explain`)
[error]     |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[error]     |
[error]     | Tree: "name, cid"
[error]     | I tried to show that
[error]     |   ("name, cid" : String)
[error]     | conforms to
[error]     |   collection.mutable.ArrayBuffer[
[error]     |   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     | ]
[error]     | but the comparison trace ended with `false`:
[error]     |
[error]     |   ==> ("name, cid" : String)  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ]
[error]     |     ==> String  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ] (left is approximated)
[error]     |     <== String  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ] (left is approximated) = false
[error]     |   <== ("name, cid" : String)  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ] = false
[error]     |
[error]     | The tests were made under a constraint with:
[error]     |  uninstantiated variables: T1, T2, T1, T2
[error]     |  constrained types: [T1, T2](_1: T1, _2: T2): (T1, T2), 
[error]     |   [T1, T2](_1: T1, _2: T2): (T1, T2)
[error]     |  bounds: 
[error]     |      T1
[error]     |      T2
[error]     |      T1 >: ("cid" : String) <: String
[error]     |      T2
[error]     |      >: (course : scalation.database.table.KGTable) <: 
[error]     |       scalation.database.table.GTable
[error]     |  ordering: 
[error]      ---------------------------------------------------------------------------
[error] Explanation
[error] ===========
[error] 
[error] Tree: "name, cid"
[error] I tried to show that
[error]   ("name, cid" : String)
[error] conforms to
[error]   collection.mutable.ArrayBuffer[
[error]   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error] ]
[error] but the comparison trace ended with `false`:
[error] 
[error]   ==> ("name, cid" : String)  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ]
[error]     ==> String  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ] (left is approximated)
[error]     <== String  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ] (left is approximated) = false
[error]   <== ("name, cid" : String)  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ] = false
[error] 
[error] The tests were made under a constraint with:
[error]  uninstantiated variables: T1, T2, T1, T2
[error]  constrained types: [T1, T2](_1: T1, _2: T2): (T1, T2), 
[error]   [T1, T2](_1: T1, _2: T2): (T1, T2)
[error]  bounds: 
[error]      T1
[error]      T2
[error]      T1 >: ("cid" : String) <: String
[error]      T2
[error]      >: (course : scalation.database.table.KGTable) <: 
[error]       scalation.database.table.GTable
[error]  ordering: 
[error] -- [E008] Not Found Error: D:\dbms\PROJECT_1\scalation_2.0\src\main\scala\scalation\database\table\KGTable.scala:327:13 
[error] 327 |    taken_id.show ()
[error]     |    ^^^^^^^^^^^^^
[error]     |value show is not a member of collection.mutable.ArrayBuffer[
[error]     |  collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |] - did you mean taken_id.drop?
[error] -- [E007] Type Mismatch Error: D:\dbms\PROJECT_1\scalation_2.0\src\main\scala\scalation\database\table\KGTable.scala:330:35 
[error] 330 |    val taken_nm = student expand ("name, cname", ("cid", course))
[error]     |                                   ^^^^^^^^^^^^^
[error]     |Found:    ("name, cname" : String)
[error]     |Required: collection.mutable.ArrayBuffer[
[error]     |  collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |]
[error]     |---------------------------------------------------------------------------
[error]     | Explanation (enabled by `-explain`)
[error]     |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[error]     |
[error]     | Tree: "name, cname"
[error]     | I tried to show that
[error]     |   ("name, cname" : String)
[error]     | conforms to
[error]     |   collection.mutable.ArrayBuffer[
[error]     |   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     | ]
[error]     | but the comparison trace ended with `false`:
[error]     |
[error]     |   ==> ("name, cname" : String)  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ]
[error]     |     ==> String  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ] (left is approximated)
[error]     |     <== String  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ] (left is approximated) = false
[error]     |   <== ("name, cname" : String)  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ] = false
[error]     |
[error]     | The tests were made under a constraint with:
[error]     |  uninstantiated variables: T1, T2, T1, T2
[error]     |  constrained types: [T1, T2](_1: T1, _2: T2): (T1, T2), 
[error]     |   [T1, T2](_1: T1, _2: T2): (T1, T2)
[error]     |  bounds: 
[error]     |      T1
[error]     |      T2
[error]     |      T1 >: ("cid" : String) <: String
[error]     |      T2
[error]     |      >: (course : scalation.database.table.KGTable) <: 
[error]     |       scalation.database.table.GTable
[error]     |  ordering: 
[error]      ---------------------------------------------------------------------------
[error] Explanation
[error] ===========
[error] 
[error] Tree: "name, cname"
[error] I tried to show that
[error]   ("name, cname" : String)
[error] conforms to
[error]   collection.mutable.ArrayBuffer[
[error]   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error] ]
[error] but the comparison trace ended with `false`:
[error] 
[error]   ==> ("name, cname" : String)  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ]
[error]     ==> String  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ] (left is approximated)
[error]     <== String  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ] (left is approximated) = false
[error]   <== ("name, cname" : String)  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ] = false
[error] 
[error] The tests were made under a constraint with:
[error]  uninstantiated variables: T1, T2, T1, T2
[error]  constrained types: [T1, T2](_1: T1, _2: T2): (T1, T2), 
[error]   [T1, T2](_1: T1, _2: T2): (T1, T2)
[error]  bounds: 
[error]      T1
[error]      T2
[error]      T1 >: ("cid" : String) <: String
[error]      T2
[error]      >: (course : scalation.database.table.KGTable) <: 
[error]       scalation.database.table.GTable
[error]  ordering: 
[error] -- [E008] Not Found Error: D:\dbms\PROJECT_1\scalation_2.0\src\main\scala\scalation\database\table\KGTable.scala:331:13 
[error] 331 |    taken_nm.show ()
[error]     |    ^^^^^^^^^^^^^
[error]     |value show is not a member of collection.mutable.ArrayBuffer[
[error]     |  collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |] - did you mean taken_nm.drop?
[error] -- [E007] Type Mismatch Error: D:\dbms\PROJECT_1\scalation_2.0\src\main\scala\scalation\database\table\KGTable.scala:345:36 
[error] 345 |    val taught_by = student.expand ("name, cid", ("cid", course))
[error]     |                                    ^^^^^^^^^^^
[error]     |Found:    ("name, cid" : String)
[error]     |Required: collection.mutable.ArrayBuffer[
[error]     |  collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |]
[error]     |---------------------------------------------------------------------------
[error]     | Explanation (enabled by `-explain`)
[error]     |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[error]     |
[error]     | Tree: "name, cid"
[error]     | I tried to show that
[error]     |   ("name, cid" : String)
[error]     | conforms to
[error]     |   collection.mutable.ArrayBuffer[
[error]     |   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     | ]
[error]     | but the comparison trace ended with `false`:
[error]     |
[error]     |   ==> ("name, cid" : String)  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ]
[error]     |     ==> String  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ] (left is approximated)
[error]     |     <== String  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ] (left is approximated) = false
[error]     |   <== ("name, cid" : String)  <:  collection.mutable.ArrayBuffer[
[error]     |    collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error]     |  ] = false
[error]     |
[error]     | The tests were made under a constraint with:
[error]     |  uninstantiated variables: T1, T2, T1, T2
[error]     |  constrained types: [T1, T2](_1: T1, _2: T2): (T1, T2), 
[error]     |   [T1, T2](_1: T1, _2: T2): (T1, T2)
[error]     |  bounds: 
[error]     |      T1
[error]     |      T2
[error]     |      T1 >: ("cid" : String) <: String
[error]     |      T2
[error]     |      >: (course : scalation.database.table.KGTable) <: 
[error]     |       scalation.database.table.GTable
[error]     |  ordering: 
[error]      ---------------------------------------------------------------------------
[error] Explanation
[error] ===========
[error] 
[error] Tree: "name, cid"
[error] I tried to show that
[error]   ("name, cid" : String)
[error] conforms to
[error]   collection.mutable.ArrayBuffer[
[error]   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)]
[error] ]
[error] but the comparison trace ended with `false`:
[error] 
[error]   ==> ("name, cid" : String)  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ]
[error]     ==> String  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ] (left is approximated)
[error]     <== String  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ] (left is approximated) = false
[error]   <== ("name, cid" : String)  <:  collection.mutable.ArrayBuffer[   collection.mutable.ArrayBuffer[(scalation.database.table.Edge, String)] ] = false
[error] 
[error] The tests were made under a constraint with:
[error]  uninstantiated variables: T1, T2, T1, T2
[error]  constrained types: [T1, T2](_1: T1, _2: T2): (T1, T2), 
[error]   [T1, T2](_1: T1, _2: T2): (T1, T2)
[error]  bounds: 
[error]      T1
[error]      T2
[error]      T1 >: ("cid" : String) <: String
[error]      T2
[error]      >: (course : scalation.database.table.KGTable) <: 
[error]       scalation.database.table.GTable
[error]  ordering: 
[error] 7 errors found
[error] Cancelled: runMain scalation.database.table.gTableTest2
[error] Cancelled: runMain scalation.database.table.gTableTest2
[error] Use 'last' for the full log.
[debug] > Exec(idea-shell, None, None)
