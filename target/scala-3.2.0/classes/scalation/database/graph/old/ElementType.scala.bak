
//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
/** @author  John Miller
 *  @version 2.0
 *  @date    Sat Aug 29 14:14:32 EDT 2020
 *  @see     LICENSE (MIT style license file).
 *
 *  @title   ElementType - a generalization of vertex type and edge type
 */

package scalation
package database
package graph

import scala.collection.mutable.Map

//import scala.collection.immutable.{Vector => VEC}
import scala.collection.mutable.{ArrayBuffer => VEC}

//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
/** The `Element` class is a generalization of vertex and edge.
 *  @param prop  the properties
 */
abstract class Element (val prop: Property) extends Serializable

//::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
/** The `ElementType` class is a generalization of vertex type and edge type.
 *  A vertex type is analogous to a relation with no foreign keys in an RDBMS.
 */
abstract class ElementType (val schema: VEC [String]) extends Serializable

