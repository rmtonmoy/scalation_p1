
package scalation.simulation.montecarlo

// runMain scalation.simulation.montecarlo.monteCarloSphere

import scala.util.Random

def Count(iter: Int): Int = {
    val randX = new Random
    val randY = new Random
    val randZ = new Random
    var counter = 0
    for (i <- 0 until iter) {
        // since we are in the quarter of the sphere we get coordinates from 0 to 1
        val x = randX.nextDouble // in [0,1] 
        val y = randY.nextDouble // in [0,1]
        val z = randZ.nextDouble // in [0,1]
        if (x*x + y*y + z*z <= 1) counter= counter + 1
    }
    counter
}

//@main def monteCarloSphere(iter: Int): Double = 4.0 * Count(iter) / iter
@main def monteCarloSphere(): Unit =

 println (4.0 * Count(1000) / 1000.0)

